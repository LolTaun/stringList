Цель задания - создать упрощенную версию библиотеки для работы со строками в языке программирования Go с использованием односвязного списка.

Основные типы и функции:
Типы данных:
Node: элемент списка, хранящий символ и ссылку на следующий элемент.
StringList: односвязный список, представляющий строку.
Функции:
func New(s string) *StringList
Создает новый StringList из обычной строки Go.

func (s *StringList) Len() int
Возвращает длину строки.

func (s *StringList) Append(c rune)
Добавляет символ в конец строки.

func (s *StringList) Prepend(c rune)
Добавляет символ в начало строки.

func (s *StringList) Insert(c rune, index int) error
Вставляет символ на определенную позицию в строке.

func (s *StringList) Remove(index int) error
Удаляет символ из строки по индексу.

func (s *StringList) String() string
Возвращает строковое представление списка.

func (s *StringList) At(index int) (rune, error)
Получает символ по индексу.

func (s *StringList) Concat(other *StringList) *StringList
Конкатенирует две строки.

func (s *StringList) Equals(other *StringList) bool
Проверяет, равны ли две строки.

func (s *StringList) IndexOf(c rune) int
Возвращает первый индекс указанного символа в строке.

func (s *StringList) Substring(start, end int) (*StringList, error)
Возвращает подстроку из строки.

func (s *StringList) Replace(old, new rune, n int) *StringList
Заменяет символы в строке.

Функции должны обрабатывать стандартные ситуации, такие как попытка удаления символа из пустой строки или вставка символа в позицию, выходящую за пределы текущей длины строки.